(require 'package)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-archives
   '(("gnu" . "https://elpa.gnu.org/packages/")
     ("melpa" . "https://melpa.org/packages/")))
 '(package-selected-packages '(haskell-mode)))
(package-initialize)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
;; haskel ghcup path so that haskell mode can see it
(let ((my-ghcup-path (expand-file-name "~/.ghcup/bin")))
  (setenv "PATH" (concat my-ghcup-path ":" (getenv "PATH")))
  (add-to-list 'exec-path my-ghcup-path))
;; C settings
(setq c-default-style "linux"
      c-basic-offset 4)
;; set alternate modifier to option key on max
(setq ns-alternate-modifier 'meta)
;; disable alternate modifier on right option key
;; useful for keep using [,],@,{ and so on..
(setq ns-right-alternate-modifier 'none)
;; disable menu on startup
(tool-bar-mode -1)
;; enables electric pair mode
(electric-pair-mode 1)
;; adds custome themes from my folder
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
;; aesthetics
(set-face-attribute 'default nil :font "Monaco" :height 180)
